<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlazorAPI</name>
    </assembly>
    <members>
        <member name="M:BlazorAPI.Controllers.TarefaController.CadastrarTarefa(BlazorAPI.DTOs.Tarefa.TarefaCadastrarDTO)">
             <summary>
             Cadastra uma nova tarefa para um usuário específico
             </summary>
             <remarks>
             Requer autenticação via JWT.
            
             Exemplo de requisição:
            
                 POST /usuarios/tarefas
                 {
                    "titulo": "Implementar API",
                    "descricao": "Desenvolver endpoints da aplicação",
                    "status": "pendente"
                 }
            
             Exemplo de resposta de sucesso:
            
                 "message": "Tarefa cadastrada com sucesso!"
            
             </remarks>
             <param name="_idUsuario">ID do usuário (número inteiro positivo) que receberá a tarefa</param>
             <param name="_dadosTarefaCadastro">DTO com os dados necessários para cadastro da tarefa</param>
             <returns>Mensagem de confirmação do cadastro</returns>
             <response code="201">Retorna mensagem de sucesso ao cadastrar a tarefa</response>
             <response code="400">Se os dados da tarefa forem inválidos</response>
             <response code="401">Acesso não autorizado (token inválido ou ausente)</response>
             <response code="404">Se o usuário não for encontrado</response>
             <response code="422">Status inválido. Informe um dos seguintes: 'pendente', 'em andamento' ou 'concluído'</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.TarefaController.AlterarTarefa(BlazorAPI.DTOs.Tarefa.TarefaCadastrarDTO)">
             <summary>
             Altera uma tarefa existente com os dados fornecidos
             </summary>
             <remarks>
             Requer autenticação via JWT.
            
             Exemplo de requisição:
            
                 POST /usuarios/alterar
                 {
                    "id": 1,
                    "titulo": "Atualizar API",
                    "descricao": "Revisar e atualizar endpoints existentes",
                    "status": "em andamento"
                 }
            
             Exemplo de resposta de sucesso:
            
                 "message": "Tarefa alterada com sucesso!"
            
             </remarks>
             <param name="_dadosTarefaCadastro">DTO com os dados necessários para alteração da tarefa</param>
             <returns>Mensagem de confirmação da alteração</returns>
             <response code="201">Retorna mensagem de sucesso ao alterar a tarefa</response>
             <response code="400">Se os dados da tarefa forem inválidos</response>
             <response code="401">Acesso não autorizado (token inválido ou ausente)</response>
             <response code="404">Se a tarefa não for encontrada</response>
             <response code="422">Status inválido. Informe um dos seguintes: 'pendente', 'em andamento' ou 'concluído'</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.TarefaController.DeletarTarefa(System.Int32)">
             <summary>
             Deleta uma tarefa existente com base no ID fornecido.
             </summary>
             <remarks>
             Requer autenticação via JWT.
            
             Exemplo de requisição:
            
                 POST /tarefas/deletar?idTarefa=1
            
             Exemplo de resposta de sucesso:
            
                 "message": "Tarefa deletada com sucesso!"
            
             </remarks>
             <param name="_idTarefa">ID da tarefa a ser deletada</param>
             <returns>Mensagem de confirmação da exclusão</returns>
             <response code="201">Retorna mensagem de sucesso ao deletar a tarefa</response>
             <response code="400">Se o ID da tarefa for inválido</response>
             <response code="401">Acesso não autorizado (token inválido ou ausente)</response>
             <response code="404">Se a tarefa não for encontrada</response>
             <response code="422">Se a operação não puder ser concluída devido a regras de negócio</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.TarefaController.ListaTarefas">
             <summary>
             Lista todas as tarefas de um usuário específico
             </summary>
             <remarks>
             Requer autenticação via JWT.
            
             Exemplo de requisição:
            
                 GET /tarefa/lista
            
             Exemplo de resposta de sucesso:
            
                 [
                    {
                       "id": 1,
                       "titulo": "Implementar API",
                       "descricao": "Desenvolver endpoints da aplicação",
                       "status": "concluído"
                    },
                    {
                       "id": 2,
                       "titulo": "Criar documentação",
                       "descricao": "Documentar endpoints no Swagger",
                       "status": "pendente"
                    }
                 ]
            
             </remarks>
             <param name="_idUsuario">ID do usuário (número inteiro positivo)</param>
             <returns>Lista de tarefas do usuário no formato JSON</returns>
             <response code="200">Retorna a lista de tarefas do usuário</response>
             <response code="401">Acesso não autorizado (token inválido ou ausente)</response>
             <response code="404">Se o usuário não for encontrado</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.TarefaController.BuscarTarefaAsync(System.Int32)">
             <summary>
             Busca uma tarefa específica pelo seu ID
             </summary>
             <remarks>
             Requer autenticação via JWT.
            
             Exemplo de requisição:
            
                 GET /tarefa/1/buscar
            
             Exemplo de resposta de sucesso:
            
                 {
                    "titulo": "Implementar API",
                    "descricao": "Desenvolver endpoints da aplicação",
                    "prioridade": "Alta",
                    "prazo": 7,
                    "status": "Em andamento",
                    "dataCriacao": "2023-05-15T10:30:00",
                 }
            
             </remarks>
             <param name="_idTarefa">ID da tarefa (número inteiro positivo)</param>
             <returns>Dados completos da tarefa no formato JSON</returns>
             <response code="200">Retorna os dados da tarefa solicitada</response>
             <response code="401">Acesso não autorizado (token inválido ou ausente)</response>
             <response code="404">Se nenhuma tarefa for encontrada com o ID fornecido</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.UsuarioController.Cadastrar(BlazorAPI.DTOs.Usuario.UsuarioCadastrarDTO)">
             <summary>
             Cadastra um novo usuário no sistema
             </summary>
             <remarks>
             Exemplo de requisição:
            
                 POST /usuarios
                 {
                    "nome": "João Silva",
                    "login": "joao",
                    "senha": "SuaSenhaForte@123",
                 }
            
             Exemplo de resposta de sucesso:
            
                 {
                    "message": "Usuário cadastrado com sucesso!"
                 }
            
             </remarks>
             <param name="_dadosUsuarioCadastro">DTO com os dados necessários para cadastro</param>
             <returns>Mensagem de sucesso ou erro detalhado</returns>
             <response code="201">Usuário cadastrado com sucesso</response>
             <response code="400">Se os dados forem inválidos</response>
             <response code="409">Se houver conflito na operação (ex: Login já cadastrado)</response>
             <response code="500">Erro interno no servidor</response>
        </member>
        <member name="M:BlazorAPI.Controllers.UsuarioController.UsuarioLogin(BlazorAPI.DTOs.Usuario.UsuarioLoginDTO)">
             <summary>
             Autentica um usuário e retorna um token JWT
             </summary>
             <remarks>
             Exemplo de requisição:
            
                 POST /login
                 {
                    "login": "joão",
                    "senha": "SuaSenhaSegura123"
                 }
            
             Exemplo de resposta de sucesso:
            
                 {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                 }
            
             </remarks>
             <param name="_usuarioLogin">DTO contendo login e senha do usuário</param>
             <returns>Token JWT para autenticação</returns>
             <response code="200">Retorna o token JWT gerado</response>
             <response code="400">Se as credenciais forem inválidas ou estiverem em formato incorreto</response>
             <response code="401">Se a autenticação falhar (login/senha incorretos)</response>
             <response code="500">Erro interno no servidor</response>
        </member>
    </members>
</doc>
